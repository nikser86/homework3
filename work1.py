# Задание 1
#
# Входные данные s=input('Введите строку ')
# Пользователь вводит строку.
# Выходные данные
from typing import Any, Tuple, Union

s ='123qwe'

# Воспользуйтесь одним print(), но при этом выводите с новой строки:
# Сначала выведите третий символ этой строки.
# Во второй строке выведите предпоследний символ этой строки.
# В третьей строке выведите первые пять символов этой строки.
# В четвертой строке выведите всю строку, кроме последних двух символов.
# В пятой строке выведите все символы с четными индексами (считая, что индексация начинается с 0,
# поэтому символы выводятся, начиная с первого символа).
# В шестой строке выведите все символы с нечетными индексами, то есть начиная со второго символа строки.
# В седьмой строке выведите все символы в обратном порядке.
# В восьмой строке выведите все символы строки через один в обратном порядке, начиная с последнего.
# В девятой строке выведите все символы строки через один в обратном порядке, начиная с предпоследнего.
# В десятой строке выведите все символы в обратном порядке без первого и последнего элемента.
# Ну, и напоследок выведите длину данной строки.
print('1', s[2:3], '\n2', s[-2], '\n3', s[:5], '\n4', s[:-2], '\n5', s[0::2], '\n6', s[1::2], '\n7', s[::-1], '\n8', s[-1::-2], '\n9', s[-2::-2], '\n10', s[-2:0:-1], '\n11', len(s))

#
# Задание 2
#
# Пользователь вводит строку. Разрежьте её на две части – равные, если длина строки чётная, а если длина строки нечётная,
# то длина первой части должна быть на один символ больше. Переставьте эти две части местами, результат запишите в новую строку и выведите на экран.
#
x=int(len(s))
if x%2==1:
    a=x//2+1 # сли длина строки нечётная,
# то длина первой части должна быть на один символ больше
else:
    a=round(x/2)
r=s[a:x]+s[0:a]
print(r)

# Задание 3
#
# Напишите счетчик с помощью конструкции while, который выводит числа от 0 до 10.
i = 0
while i<=10:
    print(str(i))
    i+=1
# Напишите счетчик с помощью конструкции while, который выводит числа от 20 до 1. Попробуйте вывести числа в одной строчке, разделённые пробелом
i = 20
stroka=''
while i>=1:
    stroka=stroka+str(i)+' '
    i-=1
print(stroka)
# Напишите цикл while, в котором вы, если число чётное, каждую итерацию уменьшаете его в 2 раза.
# Т.е. вы делите целое чётное число на 2 пока от него не останется нечётный остаток. Посчитайте сколько раз вы делили нацело на 2.
chislo=1000
kol=0
while chislo%2==0:
    kol=kol+1
    chislo = chislo/2
    print(str(chislo))
print(str(kol))
#
#
# Задание 4
#
# У вас есть список чисел.
# Напишите цикл, который выводит на экран и удаляет с начала элементы списка, пока он не останется пустым
print('Напишите цикл, который выводит на экран и удаляет с начала элементы списка, пока он не останется пустым')
spisok=[1,2,3,5,8,9,11]
i=0
while spisok:
    print(str(spisok[i]))
    spisok.pop(i)
print('** Как сделать это же задание со строкой: напишите цикл, который выводит на экран и «удаляет» первый символ строки, пока она не станет пустой?')
j=1
stroka='qwerty123'
while stroka:
    l = stroka[1:]
    stroka=l
    print(stroka)

print('Напишите цикл, который выводит на экран и удаляет элементы списка от самого маленького до самого большого, пока он не останется пустым.')
spisok=[1,22,3,5,8,9,11]
spisok.sort()
spisok.reverse()
print(spisok)
while spisok:
    spisok.pop()
    print(spisok)
# ** Дана последовательность натуральных ненулевых чисел, завершающаяся числом 0.
print('Определите, какое наибольшее число подряд идущих элементов этой последовательности равны друг другу.')
spisok=[1,1,3,4,5,5,5,9,0]
k=0
e=1
kol=[0,0,0,0,0,0,0,0]


#
# Задание 5
# Создайте строку, в которой написан, какой-то текст. Пример:
# We are not what we should be!
# We are not what we need to be.
# But at least we are not what we used to be
#  (Football Coach)
# Посчитайте сколько слов в тексте
s='''We are not what we should be! We are not what we need to be. But at least we are not what we used to be (Football Coach)..  '''
l= s.strip()
l= s.upper()
s=l

print(l ,'\n Количество слов ровно ',l.count(" ")+1)
# Удалите знаки препинания в списке слов (пройдитесь циклом все слова и удалите методом strip знаки препинания)

while (l.find('.')>0) or (l.find('!')>0) or (l.find('(')>0) or (l.find(')')>0) :
        l1 = l.find('.')
        s1=l[0:l1]
        s2=l[l1:]
        s=s1.strip('.')+s2.strip('.')
        l=s
        l1 = l.find('!')
        s1 = l[0:l1]
        s2 = l[l1:]
        s = s1.strip('!') + s2.strip('!')
        l = s
        l1 = l.find('(')
        s1 = l[0:l1]
        s2 = l[l1:]
        s = s1.strip('(') + s2.strip('(')
        l = s
        l1 = l.find(')')
        s1 = l[0:l1]
        s2 = l[l1:]
        s = s1.strip(')') + s2.strip(')')
        l = s
print('Без знаков препенания \n',s)

# Выведите слова в алфавитном порядке (найдите метод списка, который сортирует)

global slovo, spisok_slov, u, slovo
spisok_slov=[]
u=0
slovo=''
last=len(s)
for el in range(len(s)):
    if s[el]!=' ':
        slovo=slovo+s[el]
       # print(slovo)
    elif s[el]==' ':
        if slovo != '':
            spisok_slov.append(slovo)
        u+=1
        slovo=''
        #print(spisok_slov)
if slovo !='':
    spisok_slov.append(slovo)
spisok_slov.sort()

print(spisok_slov)
keys = range(len(spisok_slov))

di = {}
i=1
for x in spisok_slov:
   di[x] = spisok_slov.count(x)

print(di)




# Усложнённое * (можно сначала его не делать):
# Посчитать, сколько раз встречается каждое слово.
# (Подсказка: создавать словарь, где ключи — это слова из текста, а в значениях подсчитываем количество «встречаний» этого слова)
# Слова с большой буквы и с маленькой это все равно одно и тоже слово 
